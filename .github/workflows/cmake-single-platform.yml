name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clean workspace
      run: |
        echo "Cleaning up previous run"
        rm -rf "${{ github.workspace }}"
        mkdir -p "${{ github.workspace }}"

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential

    - name: Checkout pico-sdk
      uses: actions/checkout@v4
      with:
        repository: raspberrypi/pico-sdk
        ref: develop
        path: pico-sdk

    - name: Checkout pico-sdk submodules
      working-directory: ${{github.workspace}}/pico-sdk
      run: git submodule update --init

    - name: Set PICO_SDK_PATH
      run: |
        echo "PICO_SDK_PATH=${{github.workspace}}/pico-sdk" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: canokey-pico2
        submodules: recursive

    - name: Get short SHA
      id: sha
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      working-directory: ${{github.workspace}}/canokey-pico2

    - name: Configure CMake
      working-directory: ${{github.workspace}}/canokey-pico2
      run: |
        cmake -B build \
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        -DPICO_SDK_PATH=${{env.PICO_SDK_PATH}}

    - name: Build
      working-directory: ${{github.workspace}}/canokey-pico2
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/canokey-pico2/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ steps.sha.outputs.sha_short }}
        path: ${{github.workspace}}/canokey-pico2/build/*.uf2
        retention-days: 90
